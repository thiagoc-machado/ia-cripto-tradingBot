{
    "policy_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVOwAAAAAAAACMIXN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi5wb2xpY2llc5SMEUFjdG9yQ3JpdGljUG9saWN5lJOULg==",
        "__module__": "stable_baselines3.common.policies",
        "__doc__": "\n    Policy class for actor-critic algorithms (has both policy and value prediction).\n    Used by A2C, PPO and the likes.\n\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param lr_schedule: Learning rate schedule (could be constant)\n    :param net_arch: The specification of the policy and value networks.\n    :param activation_fn: Activation function\n    :param ortho_init: Whether to use or not orthogonal initialization\n    :param use_sde: Whether to use State Dependent Exploration or not\n    :param log_std_init: Initial value for the log standard deviation\n    :param full_std: Whether to use (n_features x n_actions) parameters\n        for the std instead of only (n_features,) when using gSDE\n    :param use_expln: Use ``expln()`` function instead of ``exp()`` to ensure\n        a positive standard deviation (cf paper). It allows to keep variance\n        above zero and prevent it from growing too fast. In practice, ``exp()`` is usually enough.\n    :param squash_output: Whether to squash the output using a tanh function,\n        this allows to ensure boundaries when using gSDE.\n    :param features_extractor_class: Features extractor to use.\n    :param features_extractor_kwargs: Keyword arguments\n        to pass to the features extractor.\n    :param share_features_extractor: If True, the features extractor is shared between the policy and value networks.\n    :param normalize_images: Whether to normalize images or not,\n         dividing by 255.0 (True by default)\n    :param optimizer_class: The optimizer to use,\n        ``th.optim.Adam`` by default\n    :param optimizer_kwargs: Additional keyword arguments,\n        excluding the learning rate, to pass to the optimizer\n    ",
        "__init__": "<function ActorCriticPolicy.__init__ at 0x000001CD4714A2A0>",
        "_get_constructor_parameters": "<function ActorCriticPolicy._get_constructor_parameters at 0x000001CD4714A340>",
        "reset_noise": "<function ActorCriticPolicy.reset_noise at 0x000001CD4714A3E0>",
        "_build_mlp_extractor": "<function ActorCriticPolicy._build_mlp_extractor at 0x000001CD4714A480>",
        "_build": "<function ActorCriticPolicy._build at 0x000001CD4714A520>",
        "forward": "<function ActorCriticPolicy.forward at 0x000001CD4714A5C0>",
        "extract_features": "<function ActorCriticPolicy.extract_features at 0x000001CD4714A660>",
        "_get_action_dist_from_latent": "<function ActorCriticPolicy._get_action_dist_from_latent at 0x000001CD4714A700>",
        "_predict": "<function ActorCriticPolicy._predict at 0x000001CD4714A7A0>",
        "evaluate_actions": "<function ActorCriticPolicy.evaluate_actions at 0x000001CD4714A840>",
        "get_distribution": "<function ActorCriticPolicy.get_distribution at 0x000001CD4714A8E0>",
        "predict_values": "<function ActorCriticPolicy.predict_values at 0x000001CD4714A980>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc._abc_data object at 0x000001CD47146100>"
    },
    "verbose": 1,
    "policy_kwargs": {},
    "num_timesteps": 200704,
    "_total_timesteps": 200000,
    "_num_timesteps_at_start": 0,
    "seed": null,
    "action_noise": null,
    "start_time": 1684085760929016800,
    "learning_rate": 0.01,
    "tensorboard_log": null,
    "lr_schedule": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWVowIAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwFLAUsTQwiVAZcAiQFTAJROhZQpjAFflIWUjGJDOlxVc2Vyc1x0aGlhZ1xPbmVEcml2ZVxEZXNrdG9wXHByb2dyXGJvdFx2ZW52XExpYlxzaXRlLXBhY2thZ2VzXHN0YWJsZV9iYXNlbGluZXMzXGNvbW1vblx1dGlscy5weZSMBGZ1bmOUjBljb25zdGFudF9mbi48bG9jYWxzPi5mdW5jlEuCQwj4gADYDxKICpRDAJSMA3ZhbJSFlCl0lFKUfZQojAtfX3BhY2thZ2VfX5SMGHN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbpSMCF9fbmFtZV9flIwec3RhYmxlX2Jhc2VsaW5lczMuY29tbW9uLnV0aWxzlIwIX19maWxlX1+UaAx1Tk5oAIwQX21ha2VfZW1wdHlfY2VsbJSTlClSlIWUdJRSlIwcY2xvdWRwaWNrbGUuY2xvdWRwaWNrbGVfZmFzdJSMEl9mdW5jdGlvbl9zZXRzdGF0ZZSTlGggfZR9lChoGGgNjAxfX3F1YWxuYW1lX1+UaA6MD19fYW5ub3RhdGlvbnNfX5R9lIwOX19rd2RlZmF1bHRzX1+UTowMX19kZWZhdWx0c19flE6MCl9fbW9kdWxlX1+UaBmMB19fZG9jX1+UTowLX19jbG9zdXJlX1+UaACMCl9tYWtlX2NlbGyUk5RHP4R64UeuFHuFlFKUhZSMF19jbG91ZHBpY2tsZV9zdWJtb2R1bGVzlF2UjAtfX2dsb2JhbHNfX5R9lHWGlIZSMC4="
    },
    "_last_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVoQAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYsAAAAAAAAAJoG70Zmeu5GAJjuRolB1ECzQh5Ce9juRnjU7kawRe9GRLegwKe/+L+0DkXAlIwFbnVtcHmUjAVkdHlwZZSTlIwCZjSUiYiHlFKUKEsDjAE8lE5OTkr/////Sv////9LAHSUYksBSwuGlIwBQ5R0lFKULg=="
    },
    "_last_episode_starts": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVdAAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYBAAAAAAAAAACUjAVudW1weZSMBWR0eXBllJOUjAJiMZSJiIeUUpQoSwOMAXyUTk5OSv////9K/////0sAdJRiSwGFlIwBQ5R0lFKULg=="
    },
    "_last_original_obs": null,
    "_episode_num": 0,
    "use_sde": false,
    "sde_sample_freq": -1,
    "_current_progress_remaining": -0.0035199999999999676,
    "_stats_window_size": 100,
    "ep_info_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "gAWVkgIAAAAAAACMC2NvbGxlY3Rpb25zlIwFZGVxdWWUk5QpS2SGlFKUKH2UKIwBcpSMFW51bXB5LmNvcmUubXVsdGlhcnJheZSMBnNjYWxhcpSTlIwFbnVtcHmUjAVkdHlwZZSTlIwCZjiUiYiHlFKUKEsDjAE8lE5OTkr/////Sv////9LAHSUYkMIx4PNeEVUmEGUhpRSlIwBbJRNfzuMAXSUR0BAZsfJV81GdX2UKGgGaAloD0MIVmI244lWoEGUhpRSlGgVTX87aBZHQFNNm4y44Id1fZQoaAZoCWgPQwhoPq9HNTGhQZSGlFKUaBVNfztoFkdAXzNdTo+wDHV9lChoBmgJaA9DCPIlzB+p9KBBlIaUUpRoFU1/O2gWR0Bk2oZ62OQydX2UKGgGaAloD0MItobK5hAUoUGUhpRSlGgVTX87aBZHQGoCf8VHnU51fZQoaAZoCWgPQwhZ3v0QMQ2hQZSGlFKUaBVNfztoFkdAbqCLl3hXKnV9lChoBmgJaA9DCNMzZfdrSKFBlIaUUpRoFU1/O2gWR0ByFHcIqsltdX2UKGgGaAloD0MIWknDu4oxoUGUhpRSlGgVTX87aBZHQHRuVGgBcRl1fZQoaAZoCWgPQwjiWfp0E1ShQZSGlFKUaBVNfztoFkdAdqa16Vt4zXV9lChoBmgJaA9DCG3KRb4NO6FBlIaUUpRoFU1/O2gWR0B6geFpPAO8dX2UKGgGaAloD0MIfo7PJQk7oUGUhpRSlGgVTX87aBZHQHzV8oDxLCh1fZQoaAZoCWgPQwjv4n24ekChQZSGlFKUaBVNfztoFkdAf0lcOby6MHV9lChoBmgJaA9DCM1WVkovT6FBlIaUUpRoFU1/O2gWR0CAtlGgBcRldWUu"
    },
    "ep_success_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "gAWVIAAAAAAAAACMC2NvbGxlY3Rpb25zlIwFZGVxdWWUk5QpS2SGlFKULg=="
    },
    "_n_updates": 980,
    "observation_space": {
        ":type:": "<class 'gym.spaces.box.Box'>",
        ":serialized:": "gAWV6gEAAAAAAACMDmd5bS5zcGFjZXMuYm94lIwDQm94lJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lGgFk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKMDWJvdW5kZWRfYmVsb3eUjBJudW1weS5jb3JlLm51bWVyaWOUjAtfZnJvbWJ1ZmZlcpSTlCiWCwAAAAAAAAABAQEBAQEBAQEBAZRoB4wCYjGUiYiHlFKUKEsDjAF8lE5OTkr/////Sv////9LAHSUYksLhZSMAUOUdJRSlIwNYm91bmRlZF9hYm92ZZRoECiWCwAAAAAAAAABAQEBAQEBAQEBAZRoFEsLhZRoGHSUUpSMBl9zaGFwZZRLC4WUjANsb3eUaBAoliwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUaApLC4WUaBh0lFKUjARoaWdolGgQKJYsAAAAAAAAAP//f3///39///9/f///f3///39///9/f///f3///39///9/f///f3///39/lGgKSwuFlGgYdJRSlIwIbG93X3JlcHKUjAMwLjCUjAloaWdoX3JlcHKUjA0zLjQwMjgyMzVlKzM4lIwKX25wX3JhbmRvbZROdWIu",
        "dtype": "float32",
        "bounded_below": "[ True  True  True  True  True  True  True  True  True  True  True]",
        "bounded_above": "[ True  True  True  True  True  True  True  True  True  True  True]",
        "_shape": [
            11
        ],
        "low": "[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]",
        "high": "[3.4028235e+38 3.4028235e+38 3.4028235e+38 3.4028235e+38 3.4028235e+38\n 3.4028235e+38 3.4028235e+38 3.4028235e+38 3.4028235e+38 3.4028235e+38\n 3.4028235e+38]",
        "low_repr": "0.0",
        "high_repr": "3.4028235e+38",
        "_np_random": null
    },
    "action_space": {
        ":type:": "<class 'gym.spaces.discrete.Discrete'>",
        ":serialized:": "gAWVjAAAAAAAAACME2d5bS5zcGFjZXMuZGlzY3JldGWUjAhEaXNjcmV0ZZSTlCmBlH2UKIwBbpRLA4wFc3RhcnSUSwCMBl9zaGFwZZQpjAVkdHlwZZSMBW51bXB5lGgIk5SMAmk4lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKMCl9ucF9yYW5kb22UTnViLg==",
        "n": 3,
        "start": 0,
        "_shape": [],
        "dtype": "int64",
        "_np_random": null
    },
    "n_envs": 1,
    "n_steps": 2048,
    "gamma": 0.99,
    "gae_lambda": 0.95,
    "ent_coef": 0.1,
    "vf_coef": 0.5,
    "max_grad_norm": 0.5,
    "batch_size": 64,
    "n_epochs": 10,
    "clip_range": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWVowIAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwFLAUsTQwiVAZcAiQFTAJROhZQpjAFflIWUjGJDOlxVc2Vyc1x0aGlhZ1xPbmVEcml2ZVxEZXNrdG9wXHByb2dyXGJvdFx2ZW52XExpYlxzaXRlLXBhY2thZ2VzXHN0YWJsZV9iYXNlbGluZXMzXGNvbW1vblx1dGlscy5weZSMBGZ1bmOUjBljb25zdGFudF9mbi48bG9jYWxzPi5mdW5jlEuCQwj4gADYDxKICpRDAJSMA3ZhbJSFlCl0lFKUfZQojAtfX3BhY2thZ2VfX5SMGHN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbpSMCF9fbmFtZV9flIwec3RhYmxlX2Jhc2VsaW5lczMuY29tbW9uLnV0aWxzlIwIX19maWxlX1+UaAx1Tk5oAIwQX21ha2VfZW1wdHlfY2VsbJSTlClSlIWUdJRSlIwcY2xvdWRwaWNrbGUuY2xvdWRwaWNrbGVfZmFzdJSMEl9mdW5jdGlvbl9zZXRzdGF0ZZSTlGggfZR9lChoGGgNjAxfX3F1YWxuYW1lX1+UaA6MD19fYW5ub3RhdGlvbnNfX5R9lIwOX19rd2RlZmF1bHRzX1+UTowMX19kZWZhdWx0c19flE6MCl9fbW9kdWxlX1+UaBmMB19fZG9jX1+UTowLX19jbG9zdXJlX1+UaACMCl9tYWtlX2NlbGyUk5RHP8mZmZmZmZqFlFKUhZSMF19jbG91ZHBpY2tsZV9zdWJtb2R1bGVzlF2UjAtfX2dsb2JhbHNfX5R9lHWGlIZSMC4="
    },
    "clip_range_vf": null,
    "normalize_advantage": true,
    "target_kl": null
}